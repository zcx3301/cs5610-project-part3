{"ast":null,"code":"var _jsxFileName = \"/Users/zcx/Desktop/final_project_part3/client/src/security/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        const res = await fetch(`${process.env.REACT_APP_API_URL}/me`, {\n          credentials: \"include\"\n        });\n        if (res.ok) {\n          setIsAuthenticated(true);\n          const data = await res.json();\n          setUser(data);\n        } else {\n          setIsAuthenticated(false);\n          setUser(null);\n        }\n      } catch (error) {\n        console.error(\"Error fetching user data:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchUserData();\n  }, []);\n  const login = async (email, password) => {\n    const res = await fetch(`${process.env.REACT_APP_API_URL}/login`, {\n      method: \"POST\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    if (res.ok) {\n      const userData = await res.json();\n      setIsAuthenticated(true);\n      setUser(userData);\n    } else {\n      setIsAuthenticated(false);\n      setUser(null);\n    }\n  };\n  const logout = async () => {\n    await fetch(`${process.env.REACT_APP_API_URL}/logout`, {\n      method: \"POST\",\n      credentials: \"include\"\n    });\n    setIsAuthenticated(false);\n  };\n  const register = async (email, password, name) => {\n    const res = await fetch(`${process.env.REACT_APP_API_URL}/register`, {\n      method: \"POST\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        password,\n        name\n      })\n    });\n    if (res.ok) {\n      const userData = await res.json();\n      setIsAuthenticated(true);\n      setUser(userData);\n    } else {\n      setIsAuthenticated(false);\n      setUser(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      loading,\n      user,\n      login,\n      register,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthProvider, \"axKgQzm4kbhCEYBuded0bRQPbI4=\");\n_c = AuthProvider;\nexport const useAuthUser = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuthUser, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","loading","setLoading","isAuthenticated","setIsAuthenticated","user","setUser","fetchUserData","res","fetch","process","env","REACT_APP_API_URL","credentials","ok","data","json","error","console","login","email","password","method","headers","body","JSON","stringify","userData","logout","register","name","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuthUser","_s2","$RefreshReg$"],"sources":["/Users/zcx/Desktop/final_project_part3/client/src/security/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from \"react\";\n\nexport const AuthContext = createContext();\n\nexport function AuthProvider({ children }) {\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        const res = await fetch(`${process.env.REACT_APP_API_URL}/me`, {\n          credentials: \"include\",\n        });\n\n        if (res.ok) {\n          setIsAuthenticated(true);\n          const data = await res.json();\n          setUser(data);\n        } else {\n          setIsAuthenticated(false);\n          setUser(null);\n        }\n      } catch (error) {\n        console.error(\"Error fetching user data:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchUserData();\n  }, []);\n\n  const login = async (email, password) => {\n    const res = await fetch(`${process.env.REACT_APP_API_URL}/login`, {\n      method: \"POST\",\n      credentials: \"include\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ email, password }),\n    });\n\n    if (res.ok) {\n      const userData = await res.json();\n      setIsAuthenticated(true);\n      setUser(userData);\n    } else {\n      setIsAuthenticated(false);\n      setUser(null);\n    }\n  };\n\n  const logout = async () => {\n    await fetch(`${process.env.REACT_APP_API_URL}/logout`, {\n      method: \"POST\",\n      credentials: \"include\",\n    });\n    setIsAuthenticated(false);\n  };\n\n  const register = async (email, password, name) => {\n    const res = await fetch(`${process.env.REACT_APP_API_URL}/register`, {\n      method: \"POST\",\n      credentials: \"include\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ email, password, name }),\n    });\n\n    if (res.ok) {\n      const userData = await res.json();\n      setIsAuthenticated(true);\n      setUser(userData);\n    } else {\n      setIsAuthenticated(false);\n      setUser(null);\n    }\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{ isAuthenticated, loading, user, login, register, logout }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\nexport const useAuthUser = () => useContext(AuthContext);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}