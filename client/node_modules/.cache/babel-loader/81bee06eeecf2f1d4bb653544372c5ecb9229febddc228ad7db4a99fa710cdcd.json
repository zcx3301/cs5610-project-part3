{"ast":null,"code":"// This function is used to fetch data from the server with the credentials option set to include.\n\nexport async function fetchWithAuth(url, options = {}) {\n  try {\n    const res = await fetch(url, {\n      ...options,\n      credentials: \"include\"\n    });\n    if (res.status === 401) {\n      window.location.href = \"/login\";\n      return;\n    }\n    if (!res.ok) {\n      throw new Error(`Request failed with status ${res.status}`);\n    }\n    return res;\n  } catch (error) {\n    console.error(\"Error during fetchWithAuth:\", error);\n    throw error;\n  }\n}\nexport async function fetchGetWithAuth(url) {\n  try {\n    const res = await fetchWithAuth(url);\n    return res.json();\n  } catch (error) {\n    console.error(\"Error during fetchGetWithAuth:\", error);\n    throw error;\n  }\n}\nexport async function fetchPostWithAuth(url, data) {\n  return fetchWithAuth(url, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(data)\n  });\n}","map":{"version":3,"names":["fetchWithAuth","url","options","res","fetch","credentials","status","window","location","href","ok","Error","error","console","fetchGetWithAuth","json","fetchPostWithAuth","data","method","headers","body","JSON","stringify"],"sources":["/Users/zcx/Desktop/cs5610 final_project3 2/client/src/security/fetchWithAuth.js"],"sourcesContent":["// This function is used to fetch data from the server with the credentials option set to include.\n\nexport async function fetchWithAuth(url, options = {}) {\n  try {\n    const res = await fetch(url, { ...options, credentials: \"include\" });\n\n    if (res.status === 401) {\n      window.location.href = \"/login\";\n      return;\n    }\n\n    if (!res.ok) {\n      throw new Error(`Request failed with status ${res.status}`);\n    }\n\n    return res;\n  } catch (error) {\n    console.error(\"Error during fetchWithAuth:\", error);\n    throw error;\n  }\n}\n\nexport async function fetchGetWithAuth(url) {\n  try {\n    const res = await fetchWithAuth(url);\n    return res.json();\n  } catch (error) {\n    console.error(\"Error during fetchGetWithAuth:\", error);\n    throw error;\n  }\n}\n\nexport async function fetchPostWithAuth(url, data) {\n  return fetchWithAuth(url, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  });\n}\n"],"mappings":"AAAA;;AAEA,OAAO,eAAeA,aAAaA,CAACC,GAAG,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;EACrD,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACH,GAAG,EAAE;MAAE,GAAGC,OAAO;MAAEG,WAAW,EAAE;IAAU,CAAC,CAAC;IAEpE,IAAIF,GAAG,CAACG,MAAM,KAAK,GAAG,EAAE;MACtBC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;MAC/B;IACF;IAEA,IAAI,CAACN,GAAG,CAACO,EAAE,EAAE;MACX,MAAM,IAAIC,KAAK,CAAC,8BAA8BR,GAAG,CAACG,MAAM,EAAE,CAAC;IAC7D;IAEA,OAAOH,GAAG;EACZ,CAAC,CAAC,OAAOS,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACnD,MAAMA,KAAK;EACb;AACF;AAEA,OAAO,eAAeE,gBAAgBA,CAACb,GAAG,EAAE;EAC1C,IAAI;IACF,MAAME,GAAG,GAAG,MAAMH,aAAa,CAACC,GAAG,CAAC;IACpC,OAAOE,GAAG,CAACY,IAAI,CAAC,CAAC;EACnB,CAAC,CAAC,OAAOH,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACtD,MAAMA,KAAK;EACb;AACF;AAEA,OAAO,eAAeI,iBAAiBA,CAACf,GAAG,EAAEgB,IAAI,EAAE;EACjD,OAAOjB,aAAa,CAACC,GAAG,EAAE;IACxBiB,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI;EAC3B,CAAC,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}